# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  

  scan-image:
    name: Scan Docker Image
    runs-on: ubuntu-latest
    #needs: [secret-scan, analyze, analyze_dockerfile, build, publish-job, containerize_n_push_to_registry]
    steps:
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_Username }}
          password: ${{ secrets.CR_Password }}
      - name: Scan Docker Image
        uses: anchore/scan-action@v2
        with:
          image: "ghcr.io/githubdevopsdemo/githubteamuser2/shopizer:latest"
          acs-report-enable: false
          fail-build: false
      - name: get the path of the anchore report
        run: |
          pwd
          ls -lart
          ls -lart ${GITHUB_WORKSPACE}/anchore-reports
          
        
      #- name: grype scan JSON results
      #  run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
      #- name: Inspect SARIF Report
      #  run: cat ${{ steps.scan.outputs.sarif }}
      #- name: upload Anchore scan SARIF report
      #  uses: github/codeql-action/upload-sarif@v1
      #  with:
      #    sarif_file: ${{ steps.scan.outputs.sarif }}
    
  
            
  #DAST:
    #name: Perform DAST scan
    #runs-on: ubuntu-latest
    #needs: [secret-scan, analyze, analyze_dockerfile, build, publish-job, containerize_n_push_to_registry, scan-image, Deploy]          
    #steps:
    #- name: ZAP Scan
      #uses: zaproxy/action-full-scan@v0.2.0
      #with:
        #target: 'https://www.zaproxy.org/'

# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#To display the triggering of the pipeline on commit
name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: [invoke_build_deploy]

jobs:
  secret-scan:
    name: Repo Secret Scan 
    runs-on: [self-hosted, Windows, X64]
    #runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: max/secret-scan@master
      
  analyze:
     name: Analyze Source Code
     runs-on: [self-hosted, Windows, X64]
     #runs-on: ubuntu-latest
     needs: [secret-scan]
     steps:
     - name: Checkout repository
       uses: actions/checkout@v2
      
    # Initializes the CodeQL tools for scanning.
 #    - name: Initialize CodeQL
 #      uses: github/codeql-action/init@v1
 #      with:
 #       languages: javascript  
    
 #    - name: Perform CodeQL Analysis
 #      uses: github/codeql-action/analyze@v1
      
  analyze_dockerfile:
     name: Analyze Dockerfile
     runs-on: [self-hosted, Windows, X64]
     needs: [secret-scan]
     continue-on-error: true
     steps:
     - name: Checkout repository
       uses: actions/checkout@v2    
     - name: Dockerfile validation - Docker Hadolint Linter
       run: docker run --rm -i hadolint/hadolint < sm-shop/Dockerfile
      
    
  build:
     name: Build Code
     runs-on: ubuntu-latest
     needs: [secret-scan, analyze, analyze_dockerfile]
     steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 1.8
       uses: actions/setup-java@v1
       with:
         java-version: 1.8
     - name: Cache the Maven packages to speed up build
       uses: actions/cache@v1
       with:
         path: ~/.m2
         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
         restore-keys: ${{ runner.os }}-m2   
     - name: Build with Maven
       #run: mvn -B package --file pom.xml
       run: mvn -B clean verify --file pom.xml
     #- run: ls -lart ${GITHUB_WORKSPACE}/sm-shop/target
     - run: ls -lart ${GITHUB_WORKSPACE}/sm-shop/target/site
     - run: ls -lart ${GITHUB_WORKSPACE}/sm-shop/target/site/jacoco
     - name: Upload coverage to Codecov
       uses: codecov/codecov-action@v1
       with:
        token: ${{ secrets.CODECOVE_TOKEN }}
        files: ./sm-shop/target/site/jacoco/jacoco.xml
        #directory: ${GITHUB_WORKSPACE}/sm-shop/target/site/jacoco/
        flags: unittests
        #env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        #path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
